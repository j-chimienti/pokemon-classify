{"version":3,"sources":["MacBook.svg","serviceWorker.js","ResultTable.jsx","Predict.jsx","ModelStatus.jsx","PredictionResults.jsx","vegaEmbedGraph.js","pokemonModel.js","Header.jsx","Force.jsx","About.jsx","Table.jsx","ModelGraph.jsx","App.jsx","index.js","pokemon.jpg"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","columns","id","Header","accessor","d","Name","Cell","row","react_default","a","createElement","className","src","concat","original","toLowerCase","width","height","alt","type","pokemon","same","pred","top5","types","includes","arr","map","prediction","i","key","style","color","transition","ResultTable","_ref","data","es","defaultPageSize","defaultProps","props","Predict","predict","handleChange","params","loadRandomPokemon","_ref$modelLoaded","modelLoaded","inputs_","predictTestData","property","htmlFor","name","value","onChange","Type","split","readOnly","onSubmit","e","preventDefault","onClick","disabled","setTimeout","ModelStatus","model","training","statusus","modelStatus","status","PredictionResults","_ref$predictions","predictions","pokemonType","length","UI","Object","classCallCheck","this","createClass","accuracyValues","epoch","newTrainAccuracy","newValidationAccuracy","push","accuracy","set","embed","$schema","values","mark","encoding","x","field","y","lossValues","newTrainLoss","newValidationLoss","loss","tf","require","POKEMON_DATA","Total","HP","Attack","Defense","Speed","Sp_Atk","Sp_Def","POKEMON_TYPES","_","uniq","item","getName","_row","found","find","PokemonData","testSplit","arguments","undefined","_this$getPokemon","getPokemon","_this$getPokemon2","slicedToArray","xTrain","yTrain","xTest","yTest","tidy","dataByClass","targetsByClass","_loop","example","target","slice","idx","findIndex","xTrains","yTrains","xTests","yTests","_PokemonData$convertT","convertToTensors","_PokemonData$convertT2","targets","numExamples","Error","indices","util","shuffle","shuffledData","shuffledTargets","numTestExamples","Math","round","numTrainExamples","xDims","xs","tensor2d","ys","oneHot","tensor1d","toInt","MODEL_SAVE_PATH","PokemonTypeModel","_SavablePokemonModel","possibleConstructorReturn","getPrototypeOf","apply","inherits","xData","yTrue","yPred","logits","rows","chunk","exampleLogits","_data","topk","dataSync","Array","from","span","join","_this3","_this$data3","argMax","predictOut","renderEvaluateTable","foundP","_d","assign","_arr","tensor","SavablePokemonModel","epochs","learningRate","generateData","Model","dispose","_this","_this$data","sequential","units","activation","inputShape","shape","forEach","layer","add","layers","dense","save","io","removeModel","createModel","optimizer","train","adam","returnCost","cost","minimize","_this2","losses","softmaxCrossEntropy","asType","mean","trainLoss","plotLosses","nextFrame","listModels","models","console","log","loadModel","loadedModel","margin","Node","_id","group","pop","Link","source","x1","x2","y1","y2","inputNodes","v","hiddenNodes","outputNodes","makeLin","sources","links","toConsumableArray","reduce","accum","array","nodes","Force","svg","d3","append","attr","colors","selectAll","enter","text","distance","React","Component","About","test","Table","top","right","bottom","left","ModelGraph","App","call","run","bind","assertThisInitialized","load","state","resultData","predictedTypes","page","localModal","checkStoredModelStatus","samplePokemon","sample","setState","objectSpread","alert","_context3","t0","asyncToGenerator","regenerator_default","_callee4","wrap","_context4","prev","next","evaluateModelOnTestData","stop","generateNewData","_context7","_ref2$target","_ref2","defineProperty","randPoke","activePage","_this$state","correctPredictions","filter","top5Pred","_ref3","correctPredictionsPercent","floor","top5PredictionsPercent","home","src_Header","src_ModelStatus","min","step","max","isNaN","src_ResultTable","src_Predict","src_PredictionResults","src_About","goTo","pokemonImg","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9f5d4854.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/MacBook.5d7e3177.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactTable from \"react-table\";\n\nconst columns = [\n\n    {\n        id: \"Name\",\n        Header: 'Name',\n        accessor: d => d.Name,\n        Cell: row => {\n\n            return (\n                <span>\n                        <img\n                            className={'pr-2'}\n                            src={`https://img.pokemondb.net/artwork/${row.original.Name.toLowerCase()}.jpg`}\n                            width=\"36\"\n                            height=\"36\"\n                            alt={row.original.Name}/>\n                    {row.original.Name}\n                    </span>\n            )\n        }\n    },\n    {\n        id: \"Type\",\n        Header: 'Type',\n        accessor: d => d.type,\n    },\n    // {\n    //     id: \"Total\",\n    //     Header: 'Total',\n    //     accessor: d => d.Total,\n    // },\n    // {\n    //     id: \"HP\",\n    //     Header: 'HP',\n    //     accessor: d => d.HP\n    //\n    // },\n    // {\n    //     id: 'Attack',\n    //     Header: 'Attack',\n    //     accessor: d => d.Attack\n    // },\n    // {\n    //     id: 'Defense',\n    //     Header: 'Defense',\n    //     accessor: d => d.Defense,\n    // },\n    // {\n    //     id: \"Speed\",\n    //     Header: 'Speed',\n    //     accessor: d => d.Speed,\n    // },\n    // {\n    //     id: 'Sp_Atk',\n    //     Header: 'Sp_Atk',\n    //     accessor: d => d.Sp_Atk,\n    // },\n    // {\n    //     id: 'Sp_Def',\n    //     Header: 'Sp_Def',\n    //     accessor: d => d.Sp_Def\n    // },\n    {\n        id: \"Prediction\",\n        Header: \"Top 5 Predictions\",\n        Cell: row => {\n\n            const pokemon = row.original;\n\n            const same = pokemon.pred === pokemon.type;\n            const top5 = pokemon.types.includes(pokemon.type);\n\n            const arr = pokemon.types.map((prediction, i) => {\n\n                if (prediction === pokemon.type) {\n\n                    return <b className={'p-1'} key={prediction + i}>{prediction}</b>\n                }\n                return <span className={'p-1'} key={prediction + i}>{prediction}</span>\n            });\n\n            return (\n                <span>\n            <span style={{\n                color: same ? '#57d500'\n                    : top5 ? '#ffbf00'\n                        : '#ff2e00',\n                transition: 'all .3s ease'\n            }}>\n              &#x25cf;\n            </span> {arr}\n          </span>\n            );\n        }\n    }\n];\n\n\nfunction ResultTable({data}) {\n\n    return (\n\n\n        <ReactTable\n            defaultPageSize={10}\n            className={'striped'}\n            columns={columns}\n            data={data}\n        />\n    );\n}\n\nResultTable.propTypes = {};\nResultTable.defaultProps = {};\n\nexport default ResultTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst props = ['Total', 'HP', 'Attack', 'Defense', 'Speed', 'Sp_Atk', 'Sp_Def'];\n\n\nfunction Predict({predict, handleChange, params, loadRandomPokemon, modelLoaded = false, predictTestData}) {\n\n    const inputs_ = props.map(property => {\n\n        return (\n            <div key={property}>\n                <label htmlFor={property}>{property}</label>\n                <input\n                    name={property}\n                    type={'number'}\n                    width={100}\n                    className={'form-control-sm mono'}\n                    id={property}\n                    value={params[property]}\n                    onChange={handleChange}\n                />\n            </div>\n\n        )\n    });\n\n    const {Name, Type: _Type} = params;\n\n    const Type = _Type.split('\\n')[0];\n\n    let readOnly = [];\n    if (Name && Type) {\n\n        readOnly = ['Name', 'Type'].map((property, i) => {\n\n            const value = property === 'Type' ? Type : params[property];\n\n            return (\n                <div key={property}>\n                    <label htmlFor={property}>\n                        {property}\n                    </label>\n                    <input type={'text'}\n                           className={'form-control-sm'}\n                           id={property}\n                           value={value}\n                           readOnly\n                           width={100}\n                    />\n                </div>\n            )\n\n        })\n    }\n\n    return (\n\n        <form onSubmit={e => {\n\n            e.preventDefault();\n            predict();\n\n        }}\n\n        >\n\n\n            {inputs_}\n\n\n            {readOnly}\n\n\n            <div className={'row my-3 mx-1 btn-group'}>\n                <button type={'button'} className={'btn btn-secondary'}\n                        onClick={loadRandomPokemon}\n                        disabled={!modelLoaded}\n                >\n                    random\n                </button>\n                <button\n                    disabled={!modelLoaded}\n\n                    onClick={predict}\n                    className={'btn btn-secondary'}>\n                    {!modelLoaded ? \"load model\" : \"predict\"}\n                </button>\n\n\n            </div>\n            <div className={'btn-group'}>\n\n                <button type={'button'} className={'btn btn-primary'}\n                        onClick={() => {\n                            loadRandomPokemon();\n\n                            setTimeout(predict, 100);\n                        }}\n                        disabled={!modelLoaded}\n                >\n                    random & predict\n                </button>\n\n            </div>\n        </form>\n    );\n}\n\nPredict.propTypes = {\n    predict: PropTypes.func.isRequired,\n    predictTestData: PropTypes.func.isRequired,\n    loadRandomPokemon: PropTypes.func.isRequired,\n    handleChange: PropTypes.func.isRequired,\n    params: PropTypes.object.isRequired,\n    modelLoaded: PropTypes.bool.isRequired,\n};\nPredict.defaultProps = {};\n\nexport default Predict;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nfunction ModelStatus({model, training, modelStatus}) {\n\n    const statusus = modelStatus.split('_');\n\n\n    return (\n        <div className={'col'}>\n            <h4>\n                Model:\n                {/*<span style={{*/}\n                {/*color: model.model ? '#57d500' : '#ff2e00',*/}\n                {/*transition: 'all .3s ease'*/}\n                {/*}}*/}\n                {/*className={'pl-2'}*/}\n                {/*>*/}\n                {/*&#x25cf;*/}\n                {/*</span>*/}\n\n                <small>\n                    {statusus.map(status => <em key={status} className={'m-2'}>{status}</em>)}\n                </small>\n\n            </h4>\n\n\n        </div>\n    );\n}\n\nModelStatus.propTypes = {\n    modelStatus: PropTypes.string.isRequired,\n    training: PropTypes.bool.isRequired,\n};\nModelStatus.defaultProps = {};\n\nexport default ModelStatus;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction PredictionResults({predictions = [], pokemonType}) {\n\n    if (!predictions.length) {\n\n        return null;\n    }\n    return (\n        <div className={'my-2'}\n        >\n            <h4>Predicted Types</h4>\n            <ol className={'list-group'}>\n                {predictions.map((prediction, i) => {\n\n                    const type = pokemonType.split('\\n')[0];\n\n                    const same = type === prediction;\n\n                    return (\n                        <li key={prediction}\n                            className={same ? 'list-group-item active' : 'list-group-item'}\n                        >\n                            {prediction}\n                        </li>\n                    )\n                })}\n            </ol>\n        </div>\n    );\n}\n\nPredictionResults.propTypes = {\n    predictions: PropTypes.array.isRequired,\n    pokemonType: PropTypes.string.isRequired,\n};\nPredictionResults.defaultProps = {};\n\nexport default PredictionResults;\n","import embed from \"vega-embed\";\n\nexport class UI {\n\n    /**\n     * Plot new accuracy values.\n     *\n     * @param lossValues An `Array` of data to append to.\n     * @param epoch Training epoch number.\n     * @param newTrainLoss The new training accuracy, as a single `Number`.\n     * @param newValidationLoss The new validation accuracy, as a single `Number`.\n     */\n    static plotAccuracies(\n        accuracyValues, epoch, newTrainAccuracy, newValidationAccuracy) {\n        accuracyValues.push(\n            {epoch, 'accuracy': newTrainAccuracy, 'set': 'train'});\n        accuracyValues.push(\n            {epoch, 'accuracy': newValidationAccuracy, 'set': 'validation'});\n        embed(\n            '#accuracyCanvas', {\n                '$schema': 'https://vega.github.io/schema/vega-lite/v2.json',\n                'data': {'values': accuracyValues},\n                'mark': 'line',\n                'encoding': {\n                    'x': {'field': 'epoch', 'type': 'ordinal'},\n                    'y': {'field': 'accuracy', 'type': 'quantitative'},\n                    'color': {'field': 'set', 'type': 'nominal'}\n                },\n                'width': 500\n            },\n            {});\n    }\n\n    static plotLosses(lossValues, epoch, newTrainLoss, newValidationLoss) {\n        lossValues.push({epoch, 'loss': newTrainLoss, 'set': 'train'});\n        lossValues.push(\n            {epoch, 'loss': newValidationLoss, 'set': 'validation'});\n        embed(\n            '#lossCanvas', {\n                '$schema': 'https://vega.github.io/schema/vega-lite/v2.json',\n                'data': {'values': lossValues},\n                'mark': 'line',\n                'encoding': {\n                    'x': {'field': 'epoch', 'type': 'ordinal'},\n                    'y': {'field': 'loss', 'type': 'quantitative'},\n                    'color': {'field': 'set', 'type': 'nominal'}\n                },\n                'width': 500\n            },\n            {});\n    }\n\n\n}\n","/* eslint-disable arrow-parens */\nimport _ from \"lodash\";\nimport {UI} from \"./vegaEmbedGraph\";\n\nconst tf = require('@tensorflow/tfjs');\nconst pokemon = require('./pokemon');\n\nconst POKEMON_DATA = pokemon.map(mapJsonToArray);\n\nconst POKEMON_TYPES = _.uniq(POKEMON_DATA.map(item => item[8]));\n\nfunction mapJsonToArray(p) {\n\n\n    const {Name, Type, Total, HP, Attack, Defense, Speed, Sp_Atk, Sp_Def} = p;\n\n    const type = Type.split('\\n')[0];\n\n    return [\n        Name,\n        Total,\n        HP,\n        Attack,\n        Defense,\n        Sp_Def,\n        Sp_Atk,\n        Speed,\n        type,\n    ]\n\n\n}\n\nfunction getName(_row) {\n\n    const found = POKEMON_DATA.find(pokemon => {\n\n        return pokemon[1] == _row[0] && pokemon[2] == _row[1]\n    });\n\n    if (found) {\n        return found[0]\n    }\n    return 'n/a';\n}\n\n\nclass PokemonData {\n\n\n    constructor(testSplit = 0.1) {\n\n        this.pokemon = pokemon;\n        this.POKEMON_DATA = POKEMON_DATA;\n        this.POKEMON_TYPES = POKEMON_TYPES;\n\n        const [xTrain, yTrain, xTest, yTest] = this.getPokemon(testSplit);\n\n        this.xTrain = xTrain;\n        this.yTrain = yTrain;\n        this.xTest = xTest;\n        this.yTest = yTest;\n    }\n\n    getPokemon(testSplit) {\n\n\n        return tf.tidy(() => {\n            const dataByClass = [];\n            const targetsByClass = [];\n            for (let i = 0; i < POKEMON_TYPES.length; ++i) {\n                dataByClass.push([]);\n                targetsByClass.push([]);\n            }\n\n            // const {dataset} = utils.normalizeDataset(POKEMON_DATA.map(i => i.slice(1, -1)), true, [], []);\n\n\n            for (let i = 0; i < POKEMON_DATA.length; i++) {\n                const example = POKEMON_DATA[i];\n                const target = example[example.length - 1];\n                const data = POKEMON_DATA.map(i => i.slice(1, -1));\n                const idx = POKEMON_TYPES.findIndex(type => type === target);\n                dataByClass[idx].push(data[i]);\n                targetsByClass[idx].push(idx);\n            }\n\n            const xTrains = [];\n            const yTrains = [];\n            const xTests = [];\n            const yTests = [];\n\n\n            for (let i = 0; i < POKEMON_TYPES.length; ++i) {\n                const [xTrain, yTrain, xTest, yTest] =\n                    PokemonData.convertToTensors(dataByClass[i], targetsByClass[i], testSplit);\n                xTrains.push(xTrain);\n                yTrains.push(yTrain);\n                xTests.push(xTest);\n                yTests.push(yTest);\n            }\n\n            const concatAxis = 0;\n            return [\n                tf.concat(xTrains, concatAxis), tf.concat(yTrains, concatAxis),\n                tf.concat(xTests, concatAxis), tf.concat(yTests, concatAxis)\n            ];\n        });\n    }\n\n\n    /**\n     * Convert Iris data arrays to `tf.Tensor`s.\n     *\n     * @param data The Iris input feature data, an `Array` of `Array`s, each element\n     *   of which is assumed to be a length-4 `Array` (for petal length, petal\n     *   width, sepal length, sepal width).\n     * @param targets An `Array` of numbers, with values from the set {0, 1, 2}:\n     *   representing the true category of the Iris flower. Assumed to have the same\n     *   array length as `data`.\n     * @param testSplit Fraction of the data at the end to split as test data: a\n     *   number between 0 and 1.\n     * @return A length-4 `Array`, with\n     *   - training data as `tf.Tensor` of shape [numTrainExapmles, 4].\n     *   - training one-hot labels as a `tf.Tensor` of shape [numTrainExamples, 3]\n     *   - test data as `tf.Tensor` of shape [numTestExamples, 4].\n     *   - test one-hot labels as a `tf.Tensor` of shape [numTestExamples, 3]\n     */\n    static convertToTensors(data, targets, testSplit) {\n        const numExamples = data.length;\n        if (numExamples !== targets.length) {\n            throw new Error('data and split have different numbers of examples');\n        }\n\n        // Randomly shuffle `data` and `targets`.\n        const indices = [];\n        for (let i = 0; i < numExamples; ++i) {\n            indices.push(i);\n        }\n        tf.util.shuffle(indices);\n\n        const shuffledData = [];\n        const shuffledTargets = [];\n        for (let i = 0; i < numExamples; ++i) {\n            shuffledData.push(data[indices[i]]);\n            shuffledTargets.push(targets[indices[i]]);\n        }\n\n        // Split the data into a training set and a tet set, based on `testSplit`.\n        const numTestExamples = Math.round(numExamples * testSplit);\n        const numTrainExamples = numExamples - numTestExamples;\n\n        const xDims = shuffledData[0].length;\n\n        // Create a 2D `tf.Tensor` to hold the feature data.\n        const xs = tf.tensor2d(shuffledData, [numExamples, xDims]);\n\n        // Create a 1D `tf.Tensor` to hold the labels, and convert the number label\n        // from the set {0, 1, 2} into one-hot encoding (.e.g., 0 --> [1, 0, 0]).\n        const ys = tf.oneHot(tf.tensor1d(shuffledTargets).toInt(), POKEMON_TYPES.length);\n\n        // Split the data into training and test sets, using `slice`.\n        const xTrain = xs.slice([0, 0], [numTrainExamples, xDims]);\n        const xTest = xs.slice([numTrainExamples, 0], [numTestExamples, xDims]);\n        const yTrain = ys.slice([0, 0], [numTrainExamples, POKEMON_TYPES.length]);\n        const yTest = ys.slice([0, 0], [numTestExamples, POKEMON_TYPES.length]);\n        return [xTrain, yTrain, xTest, yTest];\n    }\n\n\n}\n\n\nconst MODEL_SAVE_PATH = 'indexeddb://pokemon-classify';\n\nclass SavablePokemonModel {\n\n    params = {\n        epochs: 50,\n        learningRate: 0.0005,\n    };\n    model;\n\n\n    constructor(model = null) {\n\n        this.generateData();\n\n        if (model instanceof tf.Model) {\n\n            this.model = model;\n        }\n\n    }\n\n    static async checkStoredModelStatus() {\n\n        const models = await tf.io.listModels();\n\n        return models[MODEL_SAVE_PATH];\n\n\n    }\n\n    generateData() {\n\n        this.data = new PokemonData();\n    }\n\n    generateNewData() {\n\n        this.data.xTest.dispose();\n        this.data.yTest.dispose();\n        this.data.xTrain.dispose();\n        this.data.yTrain.dispose();\n        this.generateData();\n    }\n\n\n    createModel() {\n\n        const {xTrain, POKEMON_TYPES} = this.data;\n\n        this.model = tf.sequential();\n\n        const layers = [\n            {units: 256, activation: 'relu', inputShape: [xTrain.shape[1]]},\n            {units: 256, activation: 'relu'},\n            {units: POKEMON_TYPES.length}\n        ];\n        layers.forEach(layer => this.model.add(tf.layers.dense(layer)));\n\n    }\n\n    static async load() {\n\n\n        const models = await tf.io.listModels();\n        if (MODEL_SAVE_PATH in models) {\n\n            console.log('Loading existing model...')\n            const loadedModel = await tf.loadModel(MODEL_SAVE_PATH);\n\n            console.log(`Loaded model from ${MODEL_SAVE_PATH}`);\n            return new PokemonTypeModel(loadedModel);\n        } else {\n\n            throw new Error('Unable to locate model');\n        }\n\n    }\n\n    async save() {\n\n        return await this.model.save(MODEL_SAVE_PATH);\n\n    }\n\n    /**\n     * Remove the locally saved model from IndexedDB.\n     */\n    async removeModel() {\n        await tf.io.removeModel(MODEL_SAVE_PATH);\n    }\n\n    async train(params) {\n\n        if (!this.model) {\n\n            this.createModel();\n        }\n\n        const {xTrain, yTrain, xTest, yTest} = this.data;\n        const optimizer = tf.train.adam(params.learningRate);\n        const lossValues = [];\n\n        const returnCost = true;\n        for (let i = 0; i < params.epochs; i++) {\n            const cost = optimizer.minimize(() => {\n                const predictions = this.model.predict(xTrain);\n                return tf.losses.softmaxCrossEntropy(\n                    yTrain.asType('float32'),\n                    predictions.asType('float32')\n                ).mean();\n            }, returnCost);\n\n            const trainLoss = tf.losses.softmaxCrossEntropy(\n                yTest.asType('float32'),\n                this.model.predict(xTest).asType('float32')\n            ).mean();\n\n            UI.plotLosses(lossValues, i, cost.dataSync(), trainLoss.dataSync());\n\n            await tf.nextFrame();\n        }\n\n        return this;\n\n\n    };\n\n\n}\n\n\nexport class PokemonTypeModel extends SavablePokemonModel {\n\n\n    renderEvaluateTable(xData, yTrue, yPred, logits) {\n\n        const rows = _.chunk(xData, 7);\n\n        const data = [];\n\n        for (let i = 0; i < rows.length; i++) {\n\n            const row = rows[i];\n\n            const name = getName(row);\n\n            const type = POKEMON_TYPES[yTrue[i]];\n\n            const pred = POKEMON_TYPES[yPred[i]];\n            const exampleLogits = logits.slice(i * POKEMON_TYPES.length, (i + 1) * POKEMON_TYPES.length);\n\n            const top5 = tf.topk(exampleLogits, 5);\n            const _data = top5.indices.dataSync();\n\n            const types = Array.from(_data).map(item => POKEMON_TYPES[item]);\n\n            const strings = types.join(', ');\n\n            const span = strings;\n\n            data.push({\n                name,\n                type,\n                pred,\n                span,\n                types,\n                _data,\n            })\n\n        }\n        return {\n            data,\n        }\n\n    }\n\n    evaluateModelOnTestData() {\n\n        const {xTest, yTest} = this.data;\n\n        return tf.tidy(() => {\n            const xData = xTest.dataSync();\n            const yTrue = yTest.argMax(-1).dataSync();\n            const predictOut = this.model.predict(xTest);\n            const yPred = predictOut.argMax(-1);\n\n            const logits = predictOut.dataSync();\n\n\n            const result = this.renderEvaluateTable(\n                xData, yTrue, yPred.dataSync(), logits);\n\n\n            const resultData = result.data.map(d => {\n\n                const foundP = this.data.pokemon.find(_d => _d.Name === d.name);\n\n                if (foundP) {\n\n                    return Object.assign({}, foundP, d);\n\n                }\n\n                return d;\n            });\n\n            return resultData;\n\n            // calculateAndDrawConfusionMatrix(model, xTest, yTest);\n        });\n\n\n    }\n\n    predict({Total, HP, Attack, Defense, Speed, Sp_Atk, Sp_Def}) {\n\n        const _arr = [Total, HP, Attack, Defense, Speed, Sp_Atk, Sp_Def];\n\n        const tensor = tf.tensor2d(_arr, [1, 7], 'float32');\n        const prediction = this.model.predict(tensor);\n        const top5 = tf.topk(prediction, 5);\n        const _data = top5.indices.dataSync();\n        const predictedTypes = Array.from(_data).map(item => POKEMON_TYPES[item]);\n        return predictedTypes;\n    }\n\n\n}\n\n\n\n\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Header(props) {\n    return (\n        <div>\n            <h1>Tensorflow.js Classification</h1>\n            <p>\n                Train a model to predict pokemon types from their stats.\n            </p>\n\n            <h3 className={'section-title'}>\n                Description\n            </h3>\n\n            <p>\n                This example showcases how to use Tensorflow.js to perform\n                simple classification.\n\n            </p>\n\n            <p>\n                Through training on test data, the model will learn to predict\n                pokemon types from their stats\n            </p>\n\n            <h3 className={'section-title'}>\n                Instructions\n            </h3>\n\n            <ul>\n                <li>\n                    Train new model by clicking train model (or load local model if saved)\n                </li>\n                <li>\n                    Once the model has finished training, it will predict the test data.\n                    You can click \"Test\" to generate new test data and predict\n\n                </li>\n            </ul>\n        </div>\n    );\n}\n\nHeader.propTypes = {};\nHeader.defaultProps = {};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport * as d3 from 'd3';\n\n\nvar margin = {top: 20, right: 20, bottom: 20, left: 20},\n    width = 800 - margin.right - margin.left,\n    height = 500 - margin.top - margin.bottom;\n\nclass Node {\n\n    constructor(_id, group) {\n\n        this.id = _id;\n\n        this.group = group;\n\n        const idx = +_id.split('-').pop();\n\n\n        if (group === 0) {\n\n            this.x = width * .1\n            this.y = idx * (height / 2);\n        } else if (group === 1) {\n\n            this.x = width * .5;\n            this.y = idx * (height / 4);\n        } else {\n\n            this.y = idx * (height / 3);\n            this.x = width * .9;\n        }\n        this.y += 50;\n\n    }\n}\n\nclass Link {\n\n    constructor(source, target, value) {\n\n        this.source = source.id;\n        this.target = target.id;\n        this.value = value;\n\n        this.x1 = source.x;\n        this.x2 = target.x;\n\n        this.y1 = source.y;\n        this.y2 = target.y;\n    }\n\n}\n\n// let data = {\n//     \"nodes\": [\n//         {\"id\": \"Myriel\", \"group\": 1},\n//         {\"id\": \"Napoleon\", \"group\": 1},\n//         {\"id\": \"Mlle.Baptistine\", \"group\": 1},\n//         {\"id\": \"Mme.Magloire\", \"group\": 1},\n//         {\"id\": \"CountessdeLo\", \"group\": 1},\n//         {\"id\": \"Geborand\", \"group\": 1},\n//         {\"id\": \"Champtercier\", \"group\": 1},\n//         {\"id\": \"Cravatte\", \"group\": 1},\n//         {\"id\": \"Count\", \"group\": 1},\n//         {\"id\": \"OldMan\", \"group\": 1},\n//         {\"id\": \"Labarre\", \"group\": 2},\n//         {\"id\": \"Valjean\", \"group\": 2},\n//         {\"id\": \"Marguerite\", \"group\": 3},\n//         {\"id\": \"Mme.deR\", \"group\": 2},\n//         {\"id\": \"Isabeau\", \"group\": 2},\n//         {\"id\": \"Gervais\", \"group\": 2},\n//         {\"id\": \"Tholomyes\", \"group\": 3},\n//         {\"id\": \"Listolier\", \"group\": 3},\n//         {\"id\": \"Fameuil\", \"group\": 3},\n//         {\"id\": \"Blacheville\", \"group\": 3},\n//         {\"id\": \"Favourite\", \"group\": 3},\n//         {\"id\": \"Dahlia\", \"group\": 3},\n//         {\"id\": \"Zephine\", \"group\": 3},\n//         {\"id\": \"Fantine\", \"group\": 3},\n//         {\"id\": \"Mme.Thenardier\", \"group\": 4},\n//         {\"id\": \"Thenardier\", \"group\": 4},\n//         {\"id\": \"Cosette\", \"group\": 5},\n//         {\"id\": \"Javert\", \"group\": 4},\n//         {\"id\": \"Fauchelevent\", \"group\": 0},\n//         {\"id\": \"Bamatabois\", \"group\": 2},\n//         {\"id\": \"Perpetue\", \"group\": 3},\n//         {\"id\": \"Simplice\", \"group\": 2},\n//         {\"id\": \"Scaufflaire\", \"group\": 2},\n//         {\"id\": \"Woman1\", \"group\": 2},\n//         {\"id\": \"Judge\", \"group\": 2},\n//         {\"id\": \"Champmathieu\", \"group\": 2},\n//         {\"id\": \"Brevet\", \"group\": 2},\n//         {\"id\": \"Chenildieu\", \"group\": 2},\n//         {\"id\": \"Cochepaille\", \"group\": 2},\n//         {\"id\": \"Pontmercy\", \"group\": 4},\n//         {\"id\": \"Boulatruelle\", \"group\": 6},\n//         {\"id\": \"Eponine\", \"group\": 4},\n//         {\"id\": \"Anzelma\", \"group\": 4},\n//         {\"id\": \"Woman2\", \"group\": 5},\n//         {\"id\": \"MotherInnocent\", \"group\": 0},\n//         {\"id\": \"Gribier\", \"group\": 0},\n//         {\"id\": \"Jondrette\", \"group\": 7},\n//         {\"id\": \"Mme.Burgon\", \"group\": 7},\n//         {\"id\": \"Gavroche\", \"group\": 8},\n//         {\"id\": \"Gillenormand\", \"group\": 5},\n//         {\"id\": \"Magnon\", \"group\": 5},\n//         {\"id\": \"Mlle.Gillenormand\", \"group\": 5},\n//         {\"id\": \"Mme.Pontmercy\", \"group\": 5},\n//         {\"id\": \"Mlle.Vaubois\", \"group\": 5},\n//         {\"id\": \"Lt.Gillenormand\", \"group\": 5},\n//         {\"id\": \"Marius\", \"group\": 8},\n//         {\"id\": \"BaronessT\", \"group\": 5},\n//         {\"id\": \"Mabeuf\", \"group\": 8},\n//         {\"id\": \"Enjolras\", \"group\": 8},\n//         {\"id\": \"Combeferre\", \"group\": 8},\n//         {\"id\": \"Prouvaire\", \"group\": 8},\n//         {\"id\": \"Feuilly\", \"group\": 8},\n//         {\"id\": \"Courfeyrac\", \"group\": 8},\n//         {\"id\": \"Bahorel\", \"group\": 8},\n//         {\"id\": \"Bossuet\", \"group\": 8},\n//         {\"id\": \"Joly\", \"group\": 8},\n//         {\"id\": \"Grantaire\", \"group\": 8},\n//         {\"id\": \"MotherPlutarch\", \"group\": 9},\n//         {\"id\": \"Gueulemer\", \"group\": 4},\n//         {\"id\": \"Babet\", \"group\": 4},\n//         {\"id\": \"Claquesous\", \"group\": 4},\n//         {\"id\": \"Montparnasse\", \"group\": 4},\n//         {\"id\": \"Toussaint\", \"group\": 5},\n//         {\"id\": \"Child1\", \"group\": 10},\n//         {\"id\": \"Child2\", \"group\": 10},\n//         {\"id\": \"Brujon\", \"group\": 4},\n//         {\"id\": \"Mme.Hucheloup\", \"group\": 8}\n//     ],\n//     \"links\": [\n//         {\"source\": \"Napoleon\", \"target\": \"Myriel\", \"value\": 1},\n//         {\"source\": \"Mlle.Baptistine\", \"target\": \"Myriel\", \"value\": 8},\n//         {\"source\": \"Mme.Magloire\", \"target\": \"Myriel\", \"value\": 10},\n//         {\"source\": \"Mme.Magloire\", \"target\": \"Mlle.Baptistine\", \"value\": 6},\n//         {\"source\": \"CountessdeLo\", \"target\": \"Myriel\", \"value\": 1},\n//         {\"source\": \"Geborand\", \"target\": \"Myriel\", \"value\": 1},\n//         {\"source\": \"Champtercier\", \"target\": \"Myriel\", \"value\": 1},\n//         {\"source\": \"Cravatte\", \"target\": \"Myriel\", \"value\": 1},\n//         {\"source\": \"Count\", \"target\": \"Myriel\", \"value\": 2},\n//         {\"source\": \"OldMan\", \"target\": \"Myriel\", \"value\": 1},\n//         {\"source\": \"Valjean\", \"target\": \"Labarre\", \"value\": 1},\n//         {\"source\": \"Valjean\", \"target\": \"Mme.Magloire\", \"value\": 3},\n//         {\"source\": \"Valjean\", \"target\": \"Mlle.Baptistine\", \"value\": 3},\n//         {\"source\": \"Valjean\", \"target\": \"Myriel\", \"value\": 5},\n//         {\"source\": \"Marguerite\", \"target\": \"Valjean\", \"value\": 1},\n//         {\"source\": \"Mme.deR\", \"target\": \"Valjean\", \"value\": 1},\n//         {\"source\": \"Isabeau\", \"target\": \"Valjean\", \"value\": 1},\n//         {\"source\": \"Gervais\", \"target\": \"Valjean\", \"value\": 1},\n//         {\"source\": \"Listolier\", \"target\": \"Tholomyes\", \"value\": 4},\n//         {\"source\": \"Fameuil\", \"target\": \"Tholomyes\", \"value\": 4},\n//         {\"source\": \"Fameuil\", \"target\": \"Listolier\", \"value\": 4},\n//         {\"source\": \"Blacheville\", \"target\": \"Tholomyes\", \"value\": 4},\n//         {\"source\": \"Blacheville\", \"target\": \"Listolier\", \"value\": 4},\n//         {\"source\": \"Blacheville\", \"target\": \"Fameuil\", \"value\": 4},\n//         {\"source\": \"Favourite\", \"target\": \"Tholomyes\", \"value\": 3},\n//         {\"source\": \"Favourite\", \"target\": \"Listolier\", \"value\": 3},\n//         {\"source\": \"Favourite\", \"target\": \"Fameuil\", \"value\": 3},\n//         {\"source\": \"Favourite\", \"target\": \"Blacheville\", \"value\": 4},\n//         {\"source\": \"Dahlia\", \"target\": \"Tholomyes\", \"value\": 3},\n//         {\"source\": \"Dahlia\", \"target\": \"Listolier\", \"value\": 3},\n//         {\"source\": \"Dahlia\", \"target\": \"Fameuil\", \"value\": 3},\n//         {\"source\": \"Dahlia\", \"target\": \"Blacheville\", \"value\": 3},\n//         {\"source\": \"Dahlia\", \"target\": \"Favourite\", \"value\": 5},\n//         {\"source\": \"Zephine\", \"target\": \"Tholomyes\", \"value\": 3},\n//         {\"source\": \"Zephine\", \"target\": \"Listolier\", \"value\": 3},\n//         {\"source\": \"Zephine\", \"target\": \"Fameuil\", \"value\": 3},\n//         {\"source\": \"Zephine\", \"target\": \"Blacheville\", \"value\": 3},\n//         {\"source\": \"Zephine\", \"target\": \"Favourite\", \"value\": 4},\n//         {\"source\": \"Zephine\", \"target\": \"Dahlia\", \"value\": 4},\n//         {\"source\": \"Fantine\", \"target\": \"Tholomyes\", \"value\": 3},\n//         {\"source\": \"Fantine\", \"target\": \"Listolier\", \"value\": 3},\n//         {\"source\": \"Fantine\", \"target\": \"Fameuil\", \"value\": 3},\n//         {\"source\": \"Fantine\", \"target\": \"Blacheville\", \"value\": 3},\n//         {\"source\": \"Fantine\", \"target\": \"Favourite\", \"value\": 4},\n//         {\"source\": \"Fantine\", \"target\": \"Dahlia\", \"value\": 4},\n//         {\"source\": \"Fantine\", \"target\": \"Zephine\", \"value\": 4},\n//         {\"source\": \"Fantine\", \"target\": \"Marguerite\", \"value\": 2},\n//         {\"source\": \"Fantine\", \"target\": \"Valjean\", \"value\": 9},\n//         {\"source\": \"Mme.Thenardier\", \"target\": \"Fantine\", \"value\": 2},\n//         {\"source\": \"Mme.Thenardier\", \"target\": \"Valjean\", \"value\": 7},\n//         {\"source\": \"Thenardier\", \"target\": \"Mme.Thenardier\", \"value\": 13},\n//         {\"source\": \"Thenardier\", \"target\": \"Fantine\", \"value\": 1},\n//         {\"source\": \"Thenardier\", \"target\": \"Valjean\", \"value\": 12},\n//         {\"source\": \"Cosette\", \"target\": \"Mme.Thenardier\", \"value\": 4},\n//         {\"source\": \"Cosette\", \"target\": \"Valjean\", \"value\": 31},\n//         {\"source\": \"Cosette\", \"target\": \"Tholomyes\", \"value\": 1},\n//         {\"source\": \"Cosette\", \"target\": \"Thenardier\", \"value\": 1},\n//         {\"source\": \"Javert\", \"target\": \"Valjean\", \"value\": 17},\n//         {\"source\": \"Javert\", \"target\": \"Fantine\", \"value\": 5},\n//         {\"source\": \"Javert\", \"target\": \"Thenardier\", \"value\": 5},\n//         {\"source\": \"Javert\", \"target\": \"Mme.Thenardier\", \"value\": 1},\n//         {\"source\": \"Javert\", \"target\": \"Cosette\", \"value\": 1},\n//         {\"source\": \"Fauchelevent\", \"target\": \"Valjean\", \"value\": 8},\n//         {\"source\": \"Fauchelevent\", \"target\": \"Javert\", \"value\": 1},\n//         {\"source\": \"Bamatabois\", \"target\": \"Fantine\", \"value\": 1},\n//         {\"source\": \"Bamatabois\", \"target\": \"Javert\", \"value\": 1},\n//         {\"source\": \"Bamatabois\", \"target\": \"Valjean\", \"value\": 2},\n//         {\"source\": \"Perpetue\", \"target\": \"Fantine\", \"value\": 1},\n//         {\"source\": \"Simplice\", \"target\": \"Perpetue\", \"value\": 2},\n//         {\"source\": \"Simplice\", \"target\": \"Valjean\", \"value\": 3},\n//         {\"source\": \"Simplice\", \"target\": \"Fantine\", \"value\": 2},\n//         {\"source\": \"Simplice\", \"target\": \"Javert\", \"value\": 1},\n//         {\"source\": \"Scaufflaire\", \"target\": \"Valjean\", \"value\": 1},\n//         {\"source\": \"Woman1\", \"target\": \"Valjean\", \"value\": 2},\n//         {\"source\": \"Woman1\", \"target\": \"Javert\", \"value\": 1},\n//         {\"source\": \"Judge\", \"target\": \"Valjean\", \"value\": 3},\n//         {\"source\": \"Judge\", \"target\": \"Bamatabois\", \"value\": 2},\n//         {\"source\": \"Champmathieu\", \"target\": \"Valjean\", \"value\": 3},\n//         {\"source\": \"Champmathieu\", \"target\": \"Judge\", \"value\": 3},\n//         {\"source\": \"Champmathieu\", \"target\": \"Bamatabois\", \"value\": 2},\n//         {\"source\": \"Brevet\", \"target\": \"Judge\", \"value\": 2},\n//         {\"source\": \"Brevet\", \"target\": \"Champmathieu\", \"value\": 2},\n//         {\"source\": \"Brevet\", \"target\": \"Valjean\", \"value\": 2},\n//         {\"source\": \"Brevet\", \"target\": \"Bamatabois\", \"value\": 1},\n//         {\"source\": \"Chenildieu\", \"target\": \"Judge\", \"value\": 2},\n//         {\"source\": \"Chenildieu\", \"target\": \"Champmathieu\", \"value\": 2},\n//         {\"source\": \"Chenildieu\", \"target\": \"Brevet\", \"value\": 2},\n//         {\"source\": \"Chenildieu\", \"target\": \"Valjean\", \"value\": 2},\n//         {\"source\": \"Chenildieu\", \"target\": \"Bamatabois\", \"value\": 1},\n//         {\"source\": \"Cochepaille\", \"target\": \"Judge\", \"value\": 2},\n//         {\"source\": \"Cochepaille\", \"target\": \"Champmathieu\", \"value\": 2},\n//         {\"source\": \"Cochepaille\", \"target\": \"Brevet\", \"value\": 2},\n//         {\"source\": \"Cochepaille\", \"target\": \"Chenildieu\", \"value\": 2},\n//         {\"source\": \"Cochepaille\", \"target\": \"Valjean\", \"value\": 2},\n//         {\"source\": \"Cochepaille\", \"target\": \"Bamatabois\", \"value\": 1},\n//         {\"source\": \"Pontmercy\", \"target\": \"Thenardier\", \"value\": 1},\n//         {\"source\": \"Boulatruelle\", \"target\": \"Thenardier\", \"value\": 1},\n//         {\"source\": \"Eponine\", \"target\": \"Mme.Thenardier\", \"value\": 2},\n//         {\"source\": \"Eponine\", \"target\": \"Thenardier\", \"value\": 3},\n//         {\"source\": \"Anzelma\", \"target\": \"Eponine\", \"value\": 2},\n//         {\"source\": \"Anzelma\", \"target\": \"Thenardier\", \"value\": 2},\n//         {\"source\": \"Anzelma\", \"target\": \"Mme.Thenardier\", \"value\": 1},\n//         {\"source\": \"Woman2\", \"target\": \"Valjean\", \"value\": 3},\n//         {\"source\": \"Woman2\", \"target\": \"Cosette\", \"value\": 1},\n//         {\"source\": \"Woman2\", \"target\": \"Javert\", \"value\": 1},\n//         {\"source\": \"MotherInnocent\", \"target\": \"Fauchelevent\", \"value\": 3},\n//         {\"source\": \"MotherInnocent\", \"target\": \"Valjean\", \"value\": 1},\n//         {\"source\": \"Gribier\", \"target\": \"Fauchelevent\", \"value\": 2},\n//         {\"source\": \"Mme.Burgon\", \"target\": \"Jondrette\", \"value\": 1},\n//         {\"source\": \"Gavroche\", \"target\": \"Mme.Burgon\", \"value\": 2},\n//         {\"source\": \"Gavroche\", \"target\": \"Thenardier\", \"value\": 1},\n//         {\"source\": \"Gavroche\", \"target\": \"Javert\", \"value\": 1},\n//         {\"source\": \"Gavroche\", \"target\": \"Valjean\", \"value\": 1},\n//         {\"source\": \"Gillenormand\", \"target\": \"Cosette\", \"value\": 3},\n//         {\"source\": \"Gillenormand\", \"target\": \"Valjean\", \"value\": 2},\n//         {\"source\": \"Magnon\", \"target\": \"Gillenormand\", \"value\": 1},\n//         {\"source\": \"Magnon\", \"target\": \"Mme.Thenardier\", \"value\": 1},\n//         {\"source\": \"Mlle.Gillenormand\", \"target\": \"Gillenormand\", \"value\": 9},\n//         {\"source\": \"Mlle.Gillenormand\", \"target\": \"Cosette\", \"value\": 2},\n//         {\"source\": \"Mlle.Gillenormand\", \"target\": \"Valjean\", \"value\": 2},\n//         {\"source\": \"Mme.Pontmercy\", \"target\": \"Mlle.Gillenormand\", \"value\": 1},\n//         {\"source\": \"Mme.Pontmercy\", \"target\": \"Pontmercy\", \"value\": 1},\n//         {\"source\": \"Mlle.Vaubois\", \"target\": \"Mlle.Gillenormand\", \"value\": 1},\n//         {\"source\": \"Lt.Gillenormand\", \"target\": \"Mlle.Gillenormand\", \"value\": 2},\n//         {\"source\": \"Lt.Gillenormand\", \"target\": \"Gillenormand\", \"value\": 1},\n//         {\"source\": \"Lt.Gillenormand\", \"target\": \"Cosette\", \"value\": 1},\n//         {\"source\": \"Marius\", \"target\": \"Mlle.Gillenormand\", \"value\": 6},\n//         {\"source\": \"Marius\", \"target\": \"Gillenormand\", \"value\": 12},\n//         {\"source\": \"Marius\", \"target\": \"Pontmercy\", \"value\": 1},\n//         {\"source\": \"Marius\", \"target\": \"Lt.Gillenormand\", \"value\": 1},\n//         {\"source\": \"Marius\", \"target\": \"Cosette\", \"value\": 21},\n//         {\"source\": \"Marius\", \"target\": \"Valjean\", \"value\": 19},\n//         {\"source\": \"Marius\", \"target\": \"Tholomyes\", \"value\": 1},\n//         {\"source\": \"Marius\", \"target\": \"Thenardier\", \"value\": 2},\n//         {\"source\": \"Marius\", \"target\": \"Eponine\", \"value\": 5},\n//         {\"source\": \"Marius\", \"target\": \"Gavroche\", \"value\": 4},\n//         {\"source\": \"BaronessT\", \"target\": \"Gillenormand\", \"value\": 1},\n//         {\"source\": \"BaronessT\", \"target\": \"Marius\", \"value\": 1},\n//         {\"source\": \"Mabeuf\", \"target\": \"Marius\", \"value\": 1},\n//         {\"source\": \"Mabeuf\", \"target\": \"Eponine\", \"value\": 1},\n//         {\"source\": \"Mabeuf\", \"target\": \"Gavroche\", \"value\": 1},\n//         {\"source\": \"Enjolras\", \"target\": \"Marius\", \"value\": 7},\n//         {\"source\": \"Enjolras\", \"target\": \"Gavroche\", \"value\": 7},\n//         {\"source\": \"Enjolras\", \"target\": \"Javert\", \"value\": 6},\n//         {\"source\": \"Enjolras\", \"target\": \"Mabeuf\", \"value\": 1},\n//         {\"source\": \"Enjolras\", \"target\": \"Valjean\", \"value\": 4},\n//         {\"source\": \"Combeferre\", \"target\": \"Enjolras\", \"value\": 15},\n//         {\"source\": \"Combeferre\", \"target\": \"Marius\", \"value\": 5},\n//         {\"source\": \"Combeferre\", \"target\": \"Gavroche\", \"value\": 6},\n//         {\"source\": \"Combeferre\", \"target\": \"Mabeuf\", \"value\": 2},\n//         {\"source\": \"Prouvaire\", \"target\": \"Gavroche\", \"value\": 1},\n//         {\"source\": \"Prouvaire\", \"target\": \"Enjolras\", \"value\": 4},\n//         {\"source\": \"Prouvaire\", \"target\": \"Combeferre\", \"value\": 2},\n//         {\"source\": \"Feuilly\", \"target\": \"Gavroche\", \"value\": 2},\n//         {\"source\": \"Feuilly\", \"target\": \"Enjolras\", \"value\": 6},\n//         {\"source\": \"Feuilly\", \"target\": \"Prouvaire\", \"value\": 2},\n//         {\"source\": \"Feuilly\", \"target\": \"Combeferre\", \"value\": 5},\n//         {\"source\": \"Feuilly\", \"target\": \"Mabeuf\", \"value\": 1},\n//         {\"source\": \"Feuilly\", \"target\": \"Marius\", \"value\": 1},\n//         {\"source\": \"Courfeyrac\", \"target\": \"Marius\", \"value\": 9},\n//         {\"source\": \"Courfeyrac\", \"target\": \"Enjolras\", \"value\": 17},\n//         {\"source\": \"Courfeyrac\", \"target\": \"Combeferre\", \"value\": 13},\n//         {\"source\": \"Courfeyrac\", \"target\": \"Gavroche\", \"value\": 7},\n//         {\"source\": \"Courfeyrac\", \"target\": \"Mabeuf\", \"value\": 2},\n//         {\"source\": \"Courfeyrac\", \"target\": \"Eponine\", \"value\": 1},\n//         {\"source\": \"Courfeyrac\", \"target\": \"Feuilly\", \"value\": 6},\n//         {\"source\": \"Courfeyrac\", \"target\": \"Prouvaire\", \"value\": 3},\n//         {\"source\": \"Bahorel\", \"target\": \"Combeferre\", \"value\": 5},\n//         {\"source\": \"Bahorel\", \"target\": \"Gavroche\", \"value\": 5},\n//         {\"source\": \"Bahorel\", \"target\": \"Courfeyrac\", \"value\": 6},\n//         {\"source\": \"Bahorel\", \"target\": \"Mabeuf\", \"value\": 2},\n//         {\"source\": \"Bahorel\", \"target\": \"Enjolras\", \"value\": 4},\n//         {\"source\": \"Bahorel\", \"target\": \"Feuilly\", \"value\": 3},\n//         {\"source\": \"Bahorel\", \"target\": \"Prouvaire\", \"value\": 2},\n//         {\"source\": \"Bahorel\", \"target\": \"Marius\", \"value\": 1},\n//         {\"source\": \"Bossuet\", \"target\": \"Marius\", \"value\": 5},\n//         {\"source\": \"Bossuet\", \"target\": \"Courfeyrac\", \"value\": 12},\n//         {\"source\": \"Bossuet\", \"target\": \"Gavroche\", \"value\": 5},\n//         {\"source\": \"Bossuet\", \"target\": \"Bahorel\", \"value\": 4},\n//         {\"source\": \"Bossuet\", \"target\": \"Enjolras\", \"value\": 10},\n//         {\"source\": \"Bossuet\", \"target\": \"Feuilly\", \"value\": 6},\n//         {\"source\": \"Bossuet\", \"target\": \"Prouvaire\", \"value\": 2},\n//         {\"source\": \"Bossuet\", \"target\": \"Combeferre\", \"value\": 9},\n//         {\"source\": \"Bossuet\", \"target\": \"Mabeuf\", \"value\": 1},\n//         {\"source\": \"Bossuet\", \"target\": \"Valjean\", \"value\": 1},\n//         {\"source\": \"Joly\", \"target\": \"Bahorel\", \"value\": 5},\n//         {\"source\": \"Joly\", \"target\": \"Bossuet\", \"value\": 7},\n//         {\"source\": \"Joly\", \"target\": \"Gavroche\", \"value\": 3},\n//         {\"source\": \"Joly\", \"target\": \"Courfeyrac\", \"value\": 5},\n//         {\"source\": \"Joly\", \"target\": \"Enjolras\", \"value\": 5},\n//         {\"source\": \"Joly\", \"target\": \"Feuilly\", \"value\": 5},\n//         {\"source\": \"Joly\", \"target\": \"Prouvaire\", \"value\": 2},\n//         {\"source\": \"Joly\", \"target\": \"Combeferre\", \"value\": 5},\n//         {\"source\": \"Joly\", \"target\": \"Mabeuf\", \"value\": 1},\n//         {\"source\": \"Joly\", \"target\": \"Marius\", \"value\": 2},\n//         {\"source\": \"Grantaire\", \"target\": \"Bossuet\", \"value\": 3},\n//         {\"source\": \"Grantaire\", \"target\": \"Enjolras\", \"value\": 3},\n//         {\"source\": \"Grantaire\", \"target\": \"Combeferre\", \"value\": 1},\n//         {\"source\": \"Grantaire\", \"target\": \"Courfeyrac\", \"value\": 2},\n//         {\"source\": \"Grantaire\", \"target\": \"Joly\", \"value\": 2},\n//         {\"source\": \"Grantaire\", \"target\": \"Gavroche\", \"value\": 1},\n//         {\"source\": \"Grantaire\", \"target\": \"Bahorel\", \"value\": 1},\n//         {\"source\": \"Grantaire\", \"target\": \"Feuilly\", \"value\": 1},\n//         {\"source\": \"Grantaire\", \"target\": \"Prouvaire\", \"value\": 1},\n//         {\"source\": \"MotherPlutarch\", \"target\": \"Mabeuf\", \"value\": 3},\n//         {\"source\": \"Gueulemer\", \"target\": \"Thenardier\", \"value\": 5},\n//         {\"source\": \"Gueulemer\", \"target\": \"Valjean\", \"value\": 1},\n//         {\"source\": \"Gueulemer\", \"target\": \"Mme.Thenardier\", \"value\": 1},\n//         {\"source\": \"Gueulemer\", \"target\": \"Javert\", \"value\": 1},\n//         {\"source\": \"Gueulemer\", \"target\": \"Gavroche\", \"value\": 1},\n//         {\"source\": \"Gueulemer\", \"target\": \"Eponine\", \"value\": 1},\n//         {\"source\": \"Babet\", \"target\": \"Thenardier\", \"value\": 6},\n//         {\"source\": \"Babet\", \"target\": \"Gueulemer\", \"value\": 6},\n//         {\"source\": \"Babet\", \"target\": \"Valjean\", \"value\": 1},\n//         {\"source\": \"Babet\", \"target\": \"Mme.Thenardier\", \"value\": 1},\n//         {\"source\": \"Babet\", \"target\": \"Javert\", \"value\": 2},\n//         {\"source\": \"Babet\", \"target\": \"Gavroche\", \"value\": 1},\n//         {\"source\": \"Babet\", \"target\": \"Eponine\", \"value\": 1},\n//         {\"source\": \"Claquesous\", \"target\": \"Thenardier\", \"value\": 4},\n//         {\"source\": \"Claquesous\", \"target\": \"Babet\", \"value\": 4},\n//         {\"source\": \"Claquesous\", \"target\": \"Gueulemer\", \"value\": 4},\n//         {\"source\": \"Claquesous\", \"target\": \"Valjean\", \"value\": 1},\n//         {\"source\": \"Claquesous\", \"target\": \"Mme.Thenardier\", \"value\": 1},\n//         {\"source\": \"Claquesous\", \"target\": \"Javert\", \"value\": 1},\n//         {\"source\": \"Claquesous\", \"target\": \"Eponine\", \"value\": 1},\n//         {\"source\": \"Claquesous\", \"target\": \"Enjolras\", \"value\": 1},\n//         {\"source\": \"Montparnasse\", \"target\": \"Javert\", \"value\": 1},\n//         {\"source\": \"Montparnasse\", \"target\": \"Babet\", \"value\": 2},\n//         {\"source\": \"Montparnasse\", \"target\": \"Gueulemer\", \"value\": 2},\n//         {\"source\": \"Montparnasse\", \"target\": \"Claquesous\", \"value\": 2},\n//         {\"source\": \"Montparnasse\", \"target\": \"Valjean\", \"value\": 1},\n//         {\"source\": \"Montparnasse\", \"target\": \"Gavroche\", \"value\": 1},\n//         {\"source\": \"Montparnasse\", \"target\": \"Eponine\", \"value\": 1},\n//         {\"source\": \"Montparnasse\", \"target\": \"Thenardier\", \"value\": 1},\n//         {\"source\": \"Toussaint\", \"target\": \"Cosette\", \"value\": 2},\n//         {\"source\": \"Toussaint\", \"target\": \"Javert\", \"value\": 1},\n//         {\"source\": \"Toussaint\", \"target\": \"Valjean\", \"value\": 1},\n//         {\"source\": \"Child1\", \"target\": \"Gavroche\", \"value\": 2},\n//         {\"source\": \"Child2\", \"target\": \"Gavroche\", \"value\": 2},\n//         {\"source\": \"Child2\", \"target\": \"Child1\", \"value\": 3},\n//         {\"source\": \"Brujon\", \"target\": \"Babet\", \"value\": 3},\n//         {\"source\": \"Brujon\", \"target\": \"Gueulemer\", \"value\": 3},\n//         {\"source\": \"Brujon\", \"target\": \"Thenardier\", \"value\": 3},\n//         {\"source\": \"Brujon\", \"target\": \"Gavroche\", \"value\": 1},\n//         {\"source\": \"Brujon\", \"target\": \"Eponine\", \"value\": 1},\n//         {\"source\": \"Brujon\", \"target\": \"Claquesous\", \"value\": 1},\n//         {\"source\": \"Brujon\", \"target\": \"Montparnasse\", \"value\": 1},\n//         {\"source\": \"Mme.Hucheloup\", \"target\": \"Bossuet\", \"value\": 1},\n//         {\"source\": \"Mme.Hucheloup\", \"target\": \"Joly\", \"value\": 1},\n//         {\"source\": \"Mme.Hucheloup\", \"target\": \"Grantaire\", \"value\": 1},\n//         {\"source\": \"Mme.Hucheloup\", \"target\": \"Bahorel\", \"value\": 1},\n//         {\"source\": \"Mme.Hucheloup\", \"target\": \"Courfeyrac\", \"value\": 1},\n//         {\"source\": \"Mme.Hucheloup\", \"target\": \"Gavroche\", \"value\": 1},\n//         {\"source\": \"Mme.Hucheloup\", \"target\": \"Enjolras\", \"value\": 1}\n//     ]\n// };\n\nconst inputNodes = Array.from({length: 2}, (v, i) => new Node(`input-${i}`, 0));\nconst hiddenNodes = Array.from({length: 4}, (v, i) => new Node(`hidden-${i}`, 1));\nconst outputNodes = Array.from({length: 3}, (v, i) => new Node(`output-${i}`, 2));\n\n\nconst makeLin = (sources, targets) => sources.map(source => {\n\n    return targets.map(target => {\n\n        return new Link(source, target, 2);\n    })\n});\n\nconst links = [...makeLin(inputNodes, hiddenNodes), ...makeLin(hiddenNodes, outputNodes)]\n    .reduce((accum, array) => accum.concat(array), []);\n\n\nconst data = {\n    nodes: inputNodes.concat(hiddenNodes, outputNodes),\n    links\n};\n\n\nclass Force extends React.Component {\n\n    // var simulation = d3.forceSimulation(data.nodes)\n    //\n    //     .force(\"link\", d3.forceLink(data.links))\n    //     .force(\"charge\", d3.forceManyBody())\n    //     .force(\"link\", d3.forceLink(data.links))\n    // // .force(\"center\", d3.forceCenter());\n\n\n    componentDidMount() {\n\n\n        const svg = d3.select('#force-graph').append(\"g\")\n            .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        const colors = d3.schemeCategory10;\n\n        const circleRadius = 40;\n        var nodes = svg.append('g')\n            .attr('class', 'nodes')\n            .selectAll('circle')\n            .data(data.nodes)\n            .enter()\n            .append('circle')\n            .style('z-index', 10)\n            .attr('cx', function (d) {\n                return d.x\n            })\n            .attr('cy', function (d) {\n                return d.y\n            })\n            .attr('r', circleRadius)\n            .style('fill', (d, i) => {\n\n                const id = d.group;\n\n                return colors[id];\n            });\n\n        nodes.append(\"title\")\n            .text(function (d) {\n                return d.id;\n            });\n\n\n        var links = svg.append('g')\n            .attr('class', 'links')\n            .selectAll('line')\n            .style('z-index', 1)\n            .data(data.links)\n            .enter()\n            .append('line')\n            .attr(\"x1\", d => {\n                return d.x1 + circleRadius\n            })\n            .attr(\"y1\", d => d.y1)\n            .attr(\"x2\", d => d.x2 - circleRadius)\n            .attr(\"y2\", d => d.y2)\n            .attr(\"stroke\", \"blue\")\n            .attr(\"stroke-width\", 2)\n            .attr(\"fill\", \"none\")\n            .style('stroke', '#5f5f5f')\n\n        const _links = d3.forceLink().id(function (d) {\n            return d.id;\n        }).distance(width / 3).links(data.links);\n\n\n        function sim() {\n\n            var simulation = d3.forceSimulation()\n                .force(\"center\", d3.forceCenter(width / 2, height / 2))\n                .force(\"charge\", d3.forceManyBody().strength(-40))\n                .nodes(data.nodes)\n                .force(\"link\", _links)\n                .on('tick', ticked);\n\n\n            // simulation\n            //     .nodes(data.nodes)\n            //     .on(\"tick\", ticked);\n            //\n            simulation.force(\"link\")\n                .links(data.links)\n\n\n            console.log(simulation);\n\n            window.simulation = simulation;\n        }\n\n        function ticked() {\n            links\n                .attr(\"x1\", function (d) {\n                    return d.source.x;\n                })\n                .attr(\"y1\", function (d) {\n                    return d.source.y;\n                })\n                .attr(\"x2\", function (d) {\n                    return d.target.x;\n                })\n                .attr(\"y2\", function (d) {\n                    return d.target.y;\n                });\n\n            nodes\n                .attr(\"cx\", function (d) {\n                    return d.x;\n                })\n                .attr(\"cy\", function (d) {\n                    return d.y;\n                });\n        }\n    }\n\n\n    render() {\n\n        return (\n            <div>\n\n                <svg id={'force-graph'} width={width + margin.left + margin.right}\n                     height={height + margin.top + margin.bottom}>\n\n                </svg>\n\n            </div>\n        );\n    }\n}\n\nForce.propTypes = {};\nForce.defaultProps = {};\n\nexport default Force;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport test from './MacBook.svg';\nimport Force from \"./Force\";\n\nfunction About(props) {\n    return (\n        <div className={'container'}>\n            <h2>About</h2>\n\n\n            <div className={'row'}>\n                <div className={'row'}>\n                        <div className={'col'}>\n                            <h5>Sequential Model</h5>\n\n                            <ol>\n                                <li>\n                                    <b>\n                                        First Layer\n\n                                    </b>\n\n                                    <ul>\n                                        <li>\n                                            Input data: 18 units\n                                        </li>\n                                        <li>\n                                            Units: 256\n\n                                        </li>\n                                        <li>\n                                            Activation: Relu\n                                        </li>\n                                    </ul>\n\n                                </li>\n                                <li>\n\n                                    <b>\n                                        Second Layer\n                                    </b>\n                                    <ul>\n                                        <li>\n                                            Units: 256\n\n                                        </li>\n                                        <li>\n                                            Activation: Relu\n                                        </li>\n                                    </ul>\n\n                                </li>\n                                <li>\n\n                                    <b>\n                                        Third layer\n                                    </b>\n                                    <ul>\n                                        <li>\n                                            Units: 18\n                                            <small>\n                                                {' reduced to 18 pokemon types'}\n                                            </small>\n\n                                        </li>\n                                        <li>\n                                            Activation: none\n                                        </li>\n                                    </ul>\n                                </li>\n                            </ol>\n                        </div>\n\n                    <div className={'col'}>\n                        <img src={test} className={'img-fluid'}/>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    );\n}\n\nAbout.propTypes = {};\nAbout.defaultProps = {};\n\nexport default About;\n","import React from 'react';\n\nimport ReactTable from 'react-table'\nexport function Table({data}) {\n\n    const ex = {\n        id: 'friendName', // Required because our accessor is not a string\n        // Header: 'Friend Name',\n        // Cell: props => <span className='number'>{props.value}</span>, // Custom cell components!\n        // accessor: d => d.friend.name // Custom value accessors!\n    };\n\n    const columns = [\n\n        {\n            id: \"Name\",\n            Header: 'Name',\n            accessor: d => d.Name,\n            Cell: row => {\n\n                return (\n                    <span>\n                        <img\n                            className={'pr-2'}\n                            src={`https://img.pokemondb.net/artwork/${row.original.Name.toLowerCase()}.jpg`}\n                             width=\"36\" height=\"36\"\n                             alt=\"\"/>\n                        {row.original.Name}\n                    </span>\n                )\n            }\n        },\n        {\n            id: \"Type\",\n            Header: 'Type',\n            accessor: d => d.Type,\n        },\n        {\n            id: \"Total\",\n            Header: 'Total',\n            accessor: d => d.Total,\n        },\n        {\n            id: \"HP\",\n            Header: 'HP',\n            accessor: d => d.HP\n\n        },\n        {\n            id: 'Attack',\n            Header: 'Attack',\n            accessor: d => d.Attack\n        },\n        {\n            id: 'Defense',\n            Header: 'Defense',\n            accessor: d => d.Defense,\n        },\n        {\n            id: \"Speed\",\n            Header: 'Speed',\n            accessor: d => d.Speed,\n        },\n        {\n            id: 'Sp_Atk',\n            Header: 'Sp Atk',\n            accessor: d => d.Sp_Atk,\n        },\n        {\n            id: 'Sp_Def',\n            Header: 'Sp Def',\n            accessor: d => d.Sp_Def\n        }\n\n\n    ];\n\n    return <ReactTable\n        data={data}\n        defaultPageSize={10}\n        columns={columns}\n        className=\"-striped -highlight\"\n    />;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\n\n\nvar margin = {top: 20, right: 20, bottom: 20, left: 20},\n    width = 400 - margin.right - margin.left,\n    height = 500 - margin.top - margin.bottom;\n\nfunction ModelGraph(props) {\n\n\n\n    const data = {\n        input: [1,2,3],\n        hidden: [1,2,3,4],\n        output: [1,2]\n    };\n\n    const colors = d3.schemeCategory10;\n\n    const svg = d3.select('#model-graph')\n        .append('g')\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    const inputData = svg.selectAll('g.input-nodes')\n        .data(data.input)\n        .enter()\n        .append('g');\n\n    inputData.append('circle')\n        .attr('cx', d => width * .1)\n        .attr('cy', (d, i) => i * 100)\n        .style('fill', colors[0])\n        .attr('z-index', 10)\n        .attr('r', 10);\n\n    const hiddenData = svg.selectAll('g.input-nodes')\n        .data(data.hidden)\n        .enter()\n        .append('g');\n\n    hiddenData.append('circle')\n        .attr('cx', d => width / 2)\n        .attr('cy', (d, i) => i * 100)\n        .style('fill', colors[1])\n        .attr('z-index', 10)\n        .attr('r', 10);\n\n    const outputData = svg.selectAll('g.input-nodes')\n        .data(data.output)\n        .enter()\n        .append('g');\n\n    outputData.append('circle')\n        .attr('cx', d => width * .9)\n        .attr('cy', (d, i) => i * 100)\n        .style('fill', colors[2])\n        .attr('z-index', 10)\n        .attr('r', 10);\n\n\n    return (\n        <div>\n\n            <svg id={'model-graph'} width={width + margin.left + margin.right} height={height + margin.top + margin.bottom}>\n\n            </svg>\n        </div>\n    );\n}\n\nModelGraph.propTypes = {};\nModelGraph.defaultProps = {};\n\nexport default ModelGraph;\n","import React, {Component} from 'react';\nimport './App.css';\nimport {sample} from \"lodash\";\nimport ResultTable from \"./ResultTable\";\nimport Predict from \"./Predict\";\nimport ModelStatus from \"./ModelStatus\";\nimport PredictionResults from \"./PredictionResults\";\n\n\nimport {PokemonTypeModel} from \"./pokemonModel\";\nimport Header from \"./Header\";\nimport {Link} from \"react-router-dom\";\nimport pokemonImg from \"./pokemon.jpg\";\nimport About from \"./About\";\nimport {Table} from \"./Table\";\nimport pokemon from \"./pokemon\";\nimport ModelGraph from \"./ModelGraph\";\nimport Force from \"./Force\";\n\nlet model = {\n    model: null,\n};\n\nclass App extends Component {\n\n    constructor(props) {\n\n        super();\n        this.run = this.run.bind(this);\n        this.save = this.save.bind(this);\n        this.predictTestData = this.predictTestData.bind(this);\n        this.loadRandomPokemon = this.loadRandomPokemon.bind(this);\n        this.load = this.load.bind(this);\n        this.predict = this.predict.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n\n\n        this.state = {\n            resultData: [],\n            training: false,\n            predictedTypes: [],\n            page: \"home\",\n            modelStatus: \"new\",\n            model,\n            params: {\n                epochs: null,\n                learningRate: null,\n            },\n\n        };\n\n    }\n\n    async componentDidMount() {\n\n        let localModal = false;\n        if (await PokemonTypeModel.checkStoredModelStatus() != null) {\n            model = await PokemonTypeModel.load();\n\n            localModal = true;\n\n        } else {\n\n            model = new PokemonTypeModel();\n        }\n\n        const samplePokemon = sample(model.data.pokemon);\n\n        this.setState({\n            ...this.state,\n            modelStatus: localModal ? \"loaded\" : \"new\",\n            params: {\n                ...model.params,\n                ...samplePokemon\n            }\n        })\n    }\n\n\n    async removeModel() {\n\n        await model.removeModel();\n\n        model = new PokemonTypeModel();\n\n        this.setState({\n            ...this.state,\n            modelStatus: 'new_deleted'\n        });\n\n    }\n\n    async load() {\n\n        try {\n            model = await PokemonTypeModel.load();\n\n            this.setState({\n                ...this.state,\n                modelStatus: \"loaded\"\n            });\n\n        } catch (e) {\n\n            alert(e);\n        }\n    }\n\n\n    /**\n     * Run inference on manually-input Iris flower data.\n     *\n     * @param this.state.model The instance of `tf.Model` to run the inference with.\n     */\n\n    async run() {\n        model.createModel();\n        this.setState({\n            ...this.state,\n            training: true,\n            modelStatus: 'training',\n            resultData: []\n        }, async () => {\n            await model.train(this.state.params);\n            const resultData = model.evaluateModelOnTestData();\n            await model.save();\n            this.setState({\n                modelStatus: 'trained_saved',\n                ...this.state,\n                training: false,\n                resultData,\n            });\n        })\n    }\n\n\n    async predictTestData() {\n\n        model.generateNewData();\n        const resultData = model.evaluateModelOnTestData();\n\n        this.setState({\n            ...this.state,\n            resultData\n        })\n    }\n\n\n    async save() {\n\n        try {\n\n            await model.save();\n\n            this.setState({\n                ...this.state,\n                modelStatus: \"saved_loaded\"\n            });\n\n        } catch (e) {\n\n            window.alert(e);\n        }\n    }\n\n    handleChange({target: {value, name}}) {\n\n        this.setState({\n            ...this.state,\n            params: {\n                ...this.state.params,\n                [name]: value\n            }\n        });\n    }\n\n    loadRandomPokemon() {\n\n\n        const randPoke = sample(model.data.pokemon);\n\n        this.setState({\n            ...this.state,\n            predictedTypes: [],\n            params: {\n                ...this.state.params,\n                ...randPoke\n            }\n        })\n    }\n\n    predict() {\n\n        // fixme\n        if (this.state.modelStatus === \"newdkdkd\") {\n\n            window.alert('Load Model first');\n\n            return false;\n        }\n        const predictedTypes = model.predict(this.state.params);\n\n        this.setState({\n            ...this.state,\n            predictedTypes,\n        })\n\n    }\n\n    goTo(page = 'home') {\n\n        this.setState({\n\n            ...this.state,\n            page,\n        });\n    }\n\n\n    render() {\n\n        const {params, training, resultData, predictedTypes, modelStatus, page} = this.state;\n\n        const correctPredictions = resultData.filter(d => d.pred === d.type).length;\n        const top5Pred = resultData.filter(({types, type}) => types.includes(type)).length;\n        const predictions = resultData.length;\n\n        const correctPredictionsPercent = Math.floor((correctPredictions / predictions) * 100);\n        const top5PredictionsPercent = Math.floor((top5Pred / predictions) * 100);\n\n        const home = <div className={'container'}>\n\n            <Header/>\n\n            <div className={'row my-4'}>\n                <ModelStatus model={model} training={training} modelStatus={modelStatus}/>\n\n                <div className={'col float-right'}>\n                    <div className={'btn-group-sm'}>\n                        <button\n                            disabled={modelStatus === 'new' || training}\n                            type={'button'}\n                            onClick={() => this.removeModel()}\n                            className=\"btn btn-outline-danger\"\n                            id=\"delete-model\">\n                            delete model\n                        </button>\n                        <button\n                            disabled={modelStatus === 'new' || training}\n                            type={'button'}\n                            onClick={() => this.save()}\n                            className=\"btn btn-secondary\"\n                            id=\"save-model\">save model\n                        </button>\n                        <button\n                            disabled={training}\n                            type={'button'}\n                            onClick={() => this.load()}\n                            className=\"btn btn-secondary\"\n                            id=\"load-btn\">load model\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div className={'row'}>\n\n                <div className={'col-xs-6'}>\n                    <div className={'row'}>\n                        <form\n                            className={'col-xs-6 my-3 py-3'}\n                            onSubmit={(e) => {\n                                e.preventDefault();\n                                this.run();\n                            }}\n                        >\n                            <h3 className={'section-title'}>\n                                Training Parameters\n\n                            </h3>\n\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"train-epochs\">Train Epochs:</label>\n                                <input\n\n                                    onChange={e => this.setState({\n                                        ...this.state,\n                                        params: {...params, epochs: e.target.value}\n                                    })}\n                                    min={0}\n                                    step={1}\n                                    className=\"form-control-sm form-number\"\n                                    id=\"train-epochs\"\n                                    type=\"number\" value={params.epochs}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"learning-rate\">Learning Rate:</label>\n                                <input\n                                    onChange={e => this.setState({\n                                        ...this.state,\n                                        params: {...params, learningRate: e.target.value}\n                                    })}\n\n                                    width={200}\n                                    className=\"form-control-sm form-number\"\n                                    id=\"learning-rate\"\n                                    type=\"number\"\n                                    value={params.learningRate}\n                                    step={0.00001}\n                                    min={0}\n                                    max={1}\n                                />\n                            </div>\n\n                            <div className={'row my-3'}>\n                                <button type={'button'} className={'btn btn-outline-primary mr-2'}\n                                        onClick={() => {\n\n                                            this.predictTestData();\n                                        }}\n                                        disabled={training || modelStatus === 'new'}\n                                >\n                                    Test\n                                </button>\n                                <button\n                                    type={'submit'}\n                                    disabled={training}\n                                    className=\"btn btn-primary btn-lg\"\n                                    id=\"train-from-scratch\"\n                                >\n                                    Train\n                                </button>\n                            </div>\n\n\n                        </form>\n\n\n                    </div>\n\n                </div>\n                <div className={'col-xs-6'}>\n                    <div className=\"canvases\" id=\"lossCanvas\"></div>\n                    <div className=\"canvases\" id=\"accuracyCanvas\"></div>\n                </div>\n\n            </div>\n\n            <h3 className={'section-title'}>\n                Results\n\n            </h3>\n            {!isNaN(correctPredictions) && !isNaN(top5PredictionsPercent) && <div className={'row m-2'}>\n                <h5 className={'float-right'}>\n                    Correct\n                    <span className={'badge badge-secondary m-1 mono'}>\n                                {correctPredictionsPercent + '%'}\n                            </span>\n                    Top 5\n                    <span className={'badge badge-secondary m-1 mono'}>\n                                 {top5PredictionsPercent + '%'}\n                            </span>\n                </h5>\n            </div>\n            }\n            {0 < resultData.length && !training && <ResultTable\n                data={resultData}\n            />}\n\n            {!training && model.model && (\n                <div>\n                    <h3 className={'section-title'}>Predict Pokemon Type</h3>\n                    <div className={'row'}>\n                        <div className={'col m-1'}>\n                            <Predict\n                                predictTestData={this.predictTestData}\n                                modelLoaded={Boolean(model.model)}\n                                loadRandomPokemon={this.loadRandomPokemon}\n                                handleChange={this.handleChange} params={params}\n                                predict={this.predict}/>\n\n                        </div>\n                        <div className={'col m-1'}>\n                            <PredictionResults\n                                pokemonType={params.Type || \"none\"}\n                                predictions={predictedTypes}/>\n                        </div>\n                    </div>\n                </div>\n            )\n            }\n\n\n        </div>;\n\n        let activePage;\n\n        if (page === 'home') {\n            activePage = home;\n        } else if (page === 'about') {\n\n            activePage = <About/>;\n        } else if (page === 'data') {\n\n            activePage = <div className={'container-fluid'}>\n                <Table data={pokemon}/>\n            </div>;\n        }\n        return (\n            <div>\n                <nav className={'navbar'}>\n                    <a onClick={() => this.goTo('home')}>\n                        <h2 className={'navbar-brand'}>\n                            <img src={pokemonImg} alt={''} width={'50'} height={'auto'} className={'mr-2'}/>\n                            Pokemon Classification\n                        </h2>\n                    </a>\n                    <ul className={'navbar-nav'}>\n                        <a className=\"pointer\" onClick={() => this.goTo('home')}>\n                            <li>\n                                Home\n                            </li>\n                        </a>\n                        <a className=\"pointer\" onClick={() => this.goTo('about')}>\n                            <li>\n                                About\n                            </li>\n                        </a>\n                        <a className=\"pointer\" onClick={() => this.goTo('data')}>\n                            <li>\n                                Data\n                            </li>\n                        </a>\n                    </ul>\n                </nav>\n                {activePage}\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'jquery/dist/jquery.min'\nimport 'popper.js/dist/popper.min'\nimport 'bootstrap/dist/js/bootstrap.min'\nimport AppRouter from \"./Router\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport App from \"./App\";\nwindow.tf = tf;\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n","module.exports = __webpack_public_path__ + \"static/media/pokemon.a4f594f6.jpg\";"],"sourceRoot":""}